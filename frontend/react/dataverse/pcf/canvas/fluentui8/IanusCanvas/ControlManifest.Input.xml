<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="Ianua" constructor="IanusCanvas" version="1.0.0" display-name-key="Ianus Guard Canvas" description-key="Ianus Guard for Canvas Apps" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>

    <data-set name="licenseDataSet" display-name-key="License Dataset" description-key="Use ian_license table as data" />
    
    <property name="tenantId" display-name-key="Tenant Id" description-key="Id of your Entra ID tenant. You can get this from PowerFx by using the formula Host.TenantID" of-type="SingleLine.Text" usage="input" required="true" />

    <property name="publisherId" display-name-key="Publisher Id" description-key="Publisher Id using which you publish your component. This is the External Id of your Ianus publisher. Copy it from Ianus portal on your publisher record." of-type="SingleLine.Text" usage="input" required="true" />
    <property name="productId" display-name-key="Product Id" description-key="Id of the product you want to license. This is the External Id of your Ianus product." of-type="SingleLine.Text" usage="input" required="true" />
    <property name="publicKey" display-name-key="Public Key" description-key="Your product and product version specific public key for verifying the license. This is the public key of the product version assigned to the product you want to license." of-type="Multiple" usage="input" required="true" />
    <property name="fallbackPublicKey" display-name-key="Fallback Public Key" description-key="When using multiple product versions or dual signing with a customer generated license, set the appropriate public key in here. Leave empty otherwise." of-type="Multiple" usage="input" required="false" />

    <property name="isValid" display-name-key="Is Valid" description-key="This returns the result of the license validation. If a valid license was found true, otherwise false" of-type="Whole.None" usage="output" required="false" />
    <property name="reason" display-name-key="Reason" description-key="This returns the result text of the license validation. If a valid license was found it is empty, otherwise you get a rejection reason" of-type="SingleLine.Text" usage="output" required="false" />
    <property name="licenseJson" display-name-key="License Json" description-key="This returns the license JSON. If a valid license was found it is returned, otherwise empty" of-type="Multiple" usage="output" required="false" />
    
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.8.6" />
      <platform-library name="Fluent" version="8.29.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/IanusCanvas.css" order="1" />
      <resx path="strings/IanusCanvas.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>
